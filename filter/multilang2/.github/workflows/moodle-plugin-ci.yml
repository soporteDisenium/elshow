name: Moodle plugin CI

on: [push, pull_request]

# Give just enough permissions to fetch code (actions/checkout)
permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        moodle-branch: ['MOODLE_400_STABLE', 'MOODLE_401_STABLE', 'MOODLE_402_STABLE', 'master']
        php: ['7.4', '8.0', '8.1']
        database: ['mariadb', 'pgsql']
        include:
          # Moodle 3.11 only supports PHP 7.4, so include it separately.
          - moodle-branch: 'MOODLE_311_STABLE'
            php: '7.4'
            database: 'mariadb'
          - moodle-branch: 'MOODLE_311_STABLE'
            php: '7.4'
            database: 'pgsql'
          # Only Moodle 4.2 (recent enough) and master support PHP 8.2 (so far)
          - moodle-branch: 'MOODLE_402_STABLE'
            php: '8.2'
            database: 'mariadb'
          - moodle-branch: 'MOODLE_402_STABLE'
            php: '8.2'
            database: 'pgsql'
          - moodle-branch: 'master'
            php: '8.2'
            database: 'mariadb'
          - moodle-branch: 'master'
            php: '8.2'
            database: 'pgsql'
        exclude:
          # Moodle 4.2 and master don't support PHP 7.4, so exclude this combination.
          - moodle-branch: 'MOODLE_402_STABLE'
            php: '7.4'
          - moodle-branch: 'master'
            php: '7.4'
          # It seems Moodle 4.0 doesn't fully support PHP 8.1, so exclude this combination.
          - moodle-branch: 'MOODLE_400_STABLE'
            php: '8.1'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          # If you are not using code coverage, keep "none". Otherwise, use "pcov" (Moodle 3.10 and up) or "xdebug".
          # If you try to use code coverage with "none", it will fallback to phpdbg (which has known problems).
          coverage: none

      - name: Deploy moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^4
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install Moodle
        # Need explicit IP to stop mysql client fail on attempt to use unix socket.
        run: moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpcs --max-warnings 0

      - name: Moodle PHPDoc Checker
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc --max-warnings 0

      - name: Validating
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Mustache Lint
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt --max-lint-warnings 0

      - name: PHPUnit tests
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit --fail-on-warning

      - name: Behat features
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile chrome
